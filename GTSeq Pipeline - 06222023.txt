## GT-Seq Genotyping following Nate Cambell's code
https://github.com/GTseq/GTseek_utils

# Example DATA
/mnt/lfs2/staceyn/PYRA1/09-GTSeq/02102022_Run_PYRA_NIDGS_GOBI/PYRA1_02102022.csv
Directory: /mnt/lfs2/staceyn/Consulting_Projects/RAW_Data/SeqMatic/NextSeq_02252022/Undetermined_S0_R1_001.fastq

# 1- Split raw fastq sequence file into individual fastq files using dual index sequences.
NovaSeq runs are reverse compliments.  Must take reverse compliments of i7 barcodes when searching.  
i7 Barcodes Used:
Name			Barcode	Reverse_Compliment	PlateID
#GTseq_018		AGCATA	TATGCT				PYRA2_1
#GTseq_019		CGACTG	CAGTCG				PYRA2_2
#GTseq_020		CCTGAC	GTCAGG				PYRA2_3
#GTseq_021		GGCGAA	TTCGCC				PYRA2_4
#GTseq_012		TACAAG	CTTGTA				PYRA2_5
#GTseq_023		ACTGGA	TCCAGT				PYRA2_6
#GTseq_025		TTCCTG	CAGGAA				PYRA2_8
#GTSeq_001		CGTGAT	ATCACG				NIDGS_WGS
#GTseq_026		AATTTG	CAAATT				EdeerT1
#GTseq_022		CGGCCG	CGGCCG				EdeerP1

Example:
	-First use grep to split into plates using the i7 index sequence bases
```
grep -A3 '^@A01335.*:TATGCT' GC3F-SN-7777---7165_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2001F.fastq &
grep -A3 '^@A01335.*:CAGTCG' GC3F-SN-7777---7165_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2002F.fastq &
grep -A3 '^@A01335.*:GTCAGG' GC3F-SN-7777---7165_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2003F.fastq &
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7777---7165_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2004F.fastq &
grep -A3 '^@A01335.*:TATGCT' GC3F-SN-7777---7165_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2001R.fastq &
grep -A3 '^@A01335.*:CAGTCG' GC3F-SN-7777---7165_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2002R.fastq &
grep -A3 '^@A01335.*:GTCAGG' GC3F-SN-7777---7165_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2003R.fastq &
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7777---7165_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2004R.fastq &

grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/Consulting_Projects/NIDGS/WGS_Samples_06222023/NIDGS_WGSF.fastq 
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/Consulting_Projects/Eaker_Deer/GTseq/OP1_06222023/EdeerT1F.fastq 
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/Consulting_Projects/Eaker_Deer/GTseq/OP1_06222023/EdeerP1F.fastq 

grep -A3 '^@A01335.*:TATGCT' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2005F.fastq &
grep -A3 '^@A01335.*:CAGTCG' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2006F.fastq &
grep -A3 '^@A01335.*:GTCAGG' GC3F-SN-7875---7258_S0_L001_R1_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2008F.fastq &
grep -A3 '^@A01335.*:TATGCT' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2005R.fastq &
grep -A3 '^@A01335.*:CAGTCG' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2006R.fastq &
grep -A3 '^@A01335.*:GTCAGG' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/PYRA1/09-GTSeq//PYRA_Tissue_06222023/PYRA2008R.fastq &

grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/Consulting_Projects/NIDGS/WGS_Samples_06222023/NIDGS_WGSR.fastq 
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/Consulting_Projects/Eaker_Deer/GTseq/OP1_06222023/EdeerT1R.fastq 
grep -A3 '^@A01335.*:TTCGCC' GC3F-SN-7875---7258_S0_L001_R2_001.fastq | grep -v '^--$' > ~/Consulting_Projects/Eaker_Deer/GTseq/OP1_06222023/EdeerP1R.fastq 

```
grep ^@NB501656 Undetermined_S0_R1_001.fastq | cut -d":" -f10 | sort -r | uniq -c | sort -nrk1,1 > barcodes.txt

# of reads per file: (cat <file.fastq> | echo $((`wc -l`/4)) )
PYRA2001	71,922,893	
PYRA2002	69,541,881
PYRA2003	71,440,895
PYRA2004	77,021,442
PYRA2005	74,483,793
PYRA2006	99,759,679
PYRA2008	56,364,187

For individual files:
grep -A3 '^@NB501656.*<i5Barcode_ReverseCompl>$' <Plate_Name>.fastq | grep -v '^--$' > Individuals/GT1_A01_PYRA1_B2E00100.fastq

Tried using the Barcode splitter but it never works and does not output data into the files.

2- Genotype individuals using GTseq_Genotyper.pl script or GTseq_Genotyper_v2.pl script which allows for count corrections
	for loci which amplify 
	Supply Loci information file containing locus names, allele names, and in-silico probe sequences in .csv format.
	Note: input files must have linux formatted line endings.	

perl GTseq_Genotyper.pl LocusInfo.csv i20_90_P0123_IndividualID.fastq > i20_90_P0123_IndividualID.genos

See GTSeq_Genotypes.sh for run info

3-Compile Genotypes
perl GTseq_GenoCompile_v2.pl > Library_Genotypes_03152022.csv
